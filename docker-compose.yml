name: media-services

services:
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    depends_on:
      - radarr
      - sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:6767/bazarr/ping" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 16767:6767
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Bazarr/config:/config
      - /share/Data:/data

  cloudflare-tunnel:
    image: cloudflare/cloudflared:latest
    container_name: cloudflare-tunnel
    hostname: cloudflare-tunnel
    command: tunnel run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "cloudflared", "--version" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime

  notifiarr:
    image: golift/notifiarr
    hostname: notifiarr
    container_name: notifiarr
    depends_on:
      - bazarr
      - radarr
      - sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    networks:
      - media-net
    ports:
      - 15454:5454
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Notifiarr/config:/config
      - /var/run/utmp:/var/run/utmp
      - /etc/machine-id:/etc/machine-id

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    container_name: overseerr
    depends_on:
      - radarr
      - sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:5055/api/v1/status" ]
      interval: 5s
      retries: 10
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.overseerr-rtr.entrypoints=websecure
      - traefik.http.routers.overseerr-rtr.rule=Host(`overseerr.jamescarr.dev`)
      - traefik.http.routers.overseerr-rtr.service=overseerr-svc
      - traefik.http.routers.overseerr-rtr.tls=true
      - traefik.http.routers.overseerr-rtr.tls.certresolver=myresolver
      ## HTTP Services
      - traefik.http.services.overseerr-svc.loadbalancer.server.port=5055
    networks:
      - media-net
    ports:
      - 15055:5055
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Overseerr/config:/config

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    devices:
      - /dev/dri:/dev/dri
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - VERSION=docker
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:32400/identity" ]
      interval: 5s
      retries: 10
    labels:
      - traefik.enable=true
      ## HTTP Routers
      - traefik.http.routers.plex-rtr.entrypoints=websecure
      - traefik.http.routers.plex-rtr.rule=Host(`plex.jamescarr.dev`)
      - traefik.http.routers.plex-rtr.service=plex-svc
      - traefik.http.routers.plex-rtr.tls=true
      - traefik.http.routers.plex-rtr.tls.certresolver=myresolver
      ## HTTP Services
      - traefik.http.services.plex-svc.loadbalancer.server.port=32400
    networks:
      - media-net
    ports:
      - 32400:32400
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Plex/config:/config
      - /share/Data/Media/Movies:/movies
      - /share/Data/Media/TV:/tv

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:9696/ping" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 19696:9696
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Prowlarr/config:/config

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      - WEBUI_PORT=18181
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:18181" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 18181:18181
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/qBittorrent/config:/config
      - /share/Data:/data
      - /usr/builtin/etc/certificate:/sslcerts

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    depends_on:
      - prowlarr
      - qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:7878/radarr/ping" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 17878:7878
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Radarr/config:/config
      - /share/Data:/data

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    depends_on:
      - prowlarr
      - qbittorrent
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:8989/sonarr/ping" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 18989:8989
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Sonarr/config:/config
      - /share/Data:/data

  tautulli:
    image: ghcr.io/tautulli/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://127.0.0.1:8181/status" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 28181:8181
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Tautulli/config:/config
      - /share/Docker/Tautulli/plexlogs:/logs

  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - --api.insecure=true
      - --ping=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --certificatesresolvers.myresolver.acme.dnschallenge=true
      - --certificatesresolvers.myresolver.acme.dnschallenge.provider=vercel
      - --certificatesresolvers.myresolver.acme.email=james@jamescarr.dev
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    environment:
      - TZ=${TIMEZONE}
      - VERCEL_API_TOKEN=${VERCEL_API_TOKEN}
    healthcheck:
      test: [ "CMD", "traefik", "healthcheck", "--ping" ]
      interval: 5s
      retries: 10
    networks:
      - media-net
    ports:
      - 8080:8080
      - 1443:443
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Docker/Traefik/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    depends_on:
      - radarr
      - sonarr
    environment:
      - PUID=${USER_ID}
      - PGID=${GROUP_ID}
      - TZ=${TIMEZONE}
      # Sonarr Settings
      - UN_SONARR_0_URL=http://sonarr:8989
      - UN_SONARR_0_API_KEY=${SONARR_API_KEY}
      # Radarr Settings
      - UN_RADARR_0_URL=http://radarr:7878
      - UN_RADARR_0_API_KEY=${RADARR_API_KEY}
      # Webhook/Notifiarr Settings
      - UN_WEBHOOK_0_URL=https://notifiarr.com/api/v1/notification/unpackerr/619c68f2-65a7-4485-bb71-95d8d72d0833
      - UN_WEBHOOK_0_NAME=Notifiarr
      - UN_WEBHOOK_0_SILENT=false
      - UN_WEBHOOK_0_EVENTS=0
    networks:
      - media-net
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /share/Data:/data

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    environment:
      - TZ=${TIMEZONE}
      - WATCHTOWER_CLEANUP=true
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  media-net:
    driver: bridge
